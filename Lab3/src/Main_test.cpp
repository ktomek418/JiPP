#include <matrix/Macierz.hpp>
#include <fstream>
using std::cout;
using std::endl;
int main()
{
    cout << "Test konstruktorow macierzy prostokatnej i kwadratowej" << endl;
    Matrix my_matrix_1(7, 5), my_matrix_2(5, 5), my_matrix_3(7, 5), my_matrix_4(5, 5), my_matrix_5(5, 7), my_matrix_6(5, 7);
    cout << "Test metody set()" << endl;
    my_matrix_1.set(3, 3, 10);
    cout << "Test metody get();" << endl;
    cout << "Wartosc zwrocona przez metode get(): " << my_matrix_1.get(3, 3) << '\n' << endl;
    cout << "Test metody print();" << endl;
    cout << "Metoda print(): " << endl;
    my_matrix_1.print();
    cout << "Test metody cols() oraz rows()" << endl;
    cout << "Liczba zwrocona przez metode rows(): " << my_matrix_1.rows() << endl;
    cout << "Liczba zwrocona przez metode cols(): " << my_matrix_1.cols() << '\n' << endl;
    cout << "wypelnienie testowych macierzy losowymi liczbami" << endl;
    my_matrix_1.random();
    my_matrix_2.random();
    my_matrix_3.random();
    my_matrix_4.random();
    my_matrix_5.random();
    my_matrix_6.random();
    cout << "7 - Test metody Add" << endl; 
    cout << "Macierz: " << endl;
    my_matrix_2.print();
    cout << "plus macierz: " << endl;
    my_matrix_4.print();
    Matrix matrix_add = my_matrix_2.add(my_matrix_4);
    cout << "tworzy macierz: " << endl;
    matrix_add.print();
    cout << "8 - Test metody substraction" << endl; 
    cout << "Macierz: " << endl;
    my_matrix_1.print();
    cout << "minus macierz: " << endl;
    my_matrix_3.print();
    Matrix matrix_sub = my_matrix_2.substract(my_matrix_4);
    cout << "tworzy macierz: " << endl;
    matrix_sub.print();
    cout << "test metody multiply" << endl;
    cout << "Macierz: " << endl;
    my_matrix_1.print();
    cout << "razy macierz: " << endl;
    my_matrix_5.print();
    Matrix matrix_mult = my_matrix_1.multiply(my_matrix_2);
    cout << "Daje macierz:" << endl;
    matrix_mult.print();
    cout << "Test metody store" << endl;
    matrix_mult.store("matrix.txt","./");
    cout << "Test konstruktora macierzy z pliku" << endl;
    Matrix matrix_file("matrix.txt","./");
    cout << "Macierz odtworzona z pliku matrix.txt" << endl;
    matrix_file.print();
    cout << "Test operatora + dla klasy Matrix" << endl;
    cout << "Macierz: " << endl;
    my_matrix_2.print();
    cout << "plus macierz: " << endl;
    my_matrix_4.print();
    Matrix matrix_add2 = my_matrix_2 + my_matrix_4;
    cout << "tworzy macierz: " << endl;
    matrix_add2.print();
    cout << "Test operatora - dla klasy Matrix" << endl;
    cout << "Macierz: " << endl;
    matrix_add2.print();
    cout << "minus macierz: " << endl;
    my_matrix_4.print();
    Matrix matrix_sub2 = matrix_add2 - my_matrix_4;
    cout << "tworzy macierz: " << endl;
    matrix_sub2.print();
    cout << "Test operatora * dla klasy Matrix" << endl;
    cout << "Macierz: " << endl;
    my_matrix_3.print();
    cout << "razy macierz: " << endl;
    my_matrix_6.print();
    Matrix matrix_mult2 = my_matrix_3 * my_matrix_6;
    cout << "Tworzy macierz:" << endl;
    matrix_mult2.print();
    cout << "Test operatora == dla klasy Matrix" << endl;
    cout << "Macierz: " << endl;
    my_matrix_2.print();
    cout << "Oraz macierz:" << endl;
    my_matrix_4.print();
    if(my_matrix_2 == my_matrix_4) cout << "Sa sobie rowne" << endl;
    else cout << "Nie sa sobie rowne" << endl;
    cout << "Test operatora << dla klasy Matrix"<< endl;
    std::ofstream fil;
    fil.open("matrix2.txt");
    fil<<my_matrix_3;
    fil.close();
    cout << "Macierz: " << endl;
    my_matrix_3.print();
    cout << "Zostala zapisana do pliku matrix2.txt" << endl;
    cout <<"Test operatora[] dla klasy Matrix" << endl;
    const double* row = my_matrix_5[4];
    cout << "Piaty wiersz macierzy: " << endl;
    my_matrix_5.print();
    cout << "To: ";
    for(int i = 0; i<my_matrix_5.cols(); i++) cout << row[i]<<" ";
}